
@{
    ViewBag.Title = "Index";
}
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.1/Chart.js"></script>
<style>
    .numberInput {
        width: 75px !important;
    }

    .centered {
        text-align: center;
    }

    td {
        padding: 5px;
    }
</style>
<div class="container-fluid">

    <div class="row">
        <div class="col-lg-8">
            <canvas id="myChart"></canvas>
        </div>
        <div class="table-responsive col-lg-4">
            <table>
                <tr>
                    <td>Function:</td>
                    <td>Y=</td>
                    <td>
                        <input type="number" class="form-control numberInput" id="coefficientA" placeholder="a">
                    </td>
                    <td>x^2+</td>
                    <td>
                        <input type="number" class="form-control numberInput" id="coefficientB" placeholder="b">
                    </td>
                    <td>x+</td>
                    <td>
                        <input type="number" class="form-control numberInput" id="coefficientC" placeholder="c">
                    </td>
                </tr>
                <tr></tr>
                <tr>
                    <td>Step:</td>
                    <td></td>
                    <td>
                        <input type="number" class="form-control numberInput" id="step" placeholder="step">
                    </td>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
                <tr></tr>
                <tr>
                    <td>From:</td>
                    <td></td>
                    <td>
                        <input type="number" class="form-control numberInput" id="rangeFrom" placeholder="from">
                    </td>
                    <td class="centered">to:</td>
                    <td>
                        <input type="number" class="form-control numberInput" id="rangeTo" placeholder="to">
                    </td>
                    <td></td>
                    <td></td>
                </tr>
                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                    <td>
                        <button type="btn btn-default" class="btn btn-primary" id="plotBtn">Plot</button>
                    </td>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
            </table>
            @Html.ValidationSummary()
        </div>
    </div>

    <!-- Modal window   -->
    <div class="modal" id="infoModal" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Info</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <p></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>
        $(function () {
            var coefficientA = $('#coefficientA');
            var coefficientB = $('#coefficientB');
            var coefficientC = $('#coefficientC');

            var step = $("#step");
            var rangeFrom = $("#rangeFrom");
            var rangeTo = $("#rangeTo");

            var plotBtn = $("#plotBtn");

            var plotUrl = '@Url.Action("GetData")';
            var chart;
            plotBtn.click(function () {

                $.ajax({
                    url: plotUrl,
                    type: 'post',
                    data: {
                        "coefficientA": coefficientA.val(),
                        "coefficientB": coefficientB.val(),
                        "coefficientC": coefficientC.val(),
                        "step": step.val(),
                        "rangeFrom": rangeFrom.val(),
                        "rangeTo": rangeTo.val()
                    }
                }).done(function (data) {
                    if (data) {

                        if (data.IsError == false) {
                            if (data.data && data.data.length > 0) {
                                drawChart(data.data);
                            }
                        }
                        else {
                            if (data.errors && data.errors.length > 0) {

                                showInfo(data.errors);
                            }
                        }
                        
                    }
                });

                
            });

            drawChart(null);

            function showInfo(array) {
                let modalWindow = $("#infoModal");
                let data = $("#infoModal .modal-body");
                data.empty();
                for (let i = 0; i < array.length; i++) {
                    var p = document.createElement('p');
                    p.innerText=array[i];
                    data.append(p);
                }

                modalWindow.modal('show');
            }

            function drawChart(points) {
                var canvas = document.getElementById('myChart');
                var context = canvas.getContext('2d');
                context.clearRect(0, 0, canvas.width, canvas.height);

                if (typeof chart !== 'undefined') {
                    chart.destroy();
                }

                 chart = new Chart(context, {
                    type: 'line',
                    data: {
                        datasets: [{
                            label: 'Y',
                            fill: false,
                            borderColor: 'green',
                            data: points
                        }]
                    },
                    options: {
                        scales: {
                            xAxes: [{
                                type: 'linear',
                                position: 'bottom'
                            }]
                        }
                    }
                });

                
            }
        });
    </script>
}


